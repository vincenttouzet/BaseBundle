<?php

namespace {{ namespace }}\Admin;

use Sonata\AdminBundle\Admin\Admin as BaseAdmin;
use Sonata\AdminBundle\Form\FormMapper;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Show\ShowMapper;

class {{ entityName }}Admin extends BaseAdmin
{
    protected function configureFormFields(FormMapper $formMapper)
    {
        $formMapper
        {%- for field in metadata.associationMappings %}
            {%- if field.type in render_associations %}

            ->add('{{ field.fieldName }}')

            {%- endif %}
        {%- endfor %}
        {%- for field in metadata.fieldMappings %}
            {%- if field.fieldName not in metadata.identifier %}
                {%- if 'boolean' == field.type %}

            ->add('{{ field.fieldName }}', null, array('required' => false))

                {%- else %}

            ->add('{{ field.fieldName }}')

                {%- endif %}
            {%- endif %}
        {%- endfor %}
;
    }

    protected function configureDatagridFilters(DatagridMapper $datagridMapper)
    {
        $datagridMapper
        {%- for identifier in metadata.identifier %}

            ->add('{{ identifier }}')

        {%- endfor %}
        {%- for field in metadata.associationMappings %}
            {%- if field.type in render_associations %}

            ->add('{{ field.fieldName }}')

            {%- endif %}
        {%- endfor %}
        {%- for field in metadata.fieldMappings %}
            {%- if field.fieldName not in metadata.identifier %}

            ->add('{{ field.fieldName }}')

            {%- endif %}
        {%- endfor %}
;
    }

    protected function configureListFields(ListMapper $listMapper)
    {
        $listMapper
        {%- for identifier in metadata.identifier %}

            ->add('{{ identifier }}')

        {%- endfor %}
        {%- for field in metadata.associationMappings %}
            {%- if field.type in render_associations %}

            ->add('{{ field.fieldName }}')

            {%- endif %}
        {%- endfor %}
        {%- for field in metadata.fieldMappings %}
            {%- if field.fieldName not in metadata.identifier %}
                {%- if 'boolean' == field.type %}

            ->add('{{ field.fieldName }}', null, array('editable' => true))

                {%- else %}

            ->add('{{ field.fieldName }}')

                {%- endif %}
            {%- endif %}
        {%- endfor %}

            ->add(
                '_action',
                'actions',
                array(
                    'actions' => array(
                        'show' => array(),
                        'edit' => array(),
                        'delete' => array(),
                    )
                )
            );
    }

    protected function configureShowFields(ShowMapper $showMapper)
    {
        $showMapper
        {%- for identifier in metadata.identifier %}

            ->add('{{ identifier }}')

        {%- endfor %}
        {%- for field in metadata.associationMappings %}
            {%- if field.type in render_associations %}

            ->add('{{ field.fieldName }}')

            {%- endif %}
        {%- endfor %}
        {%- for field in metadata.fieldMappings %}
            {%- if field.fieldName not in metadata.identifier %}

            ->add('{{ field.fieldName }}')

            {%- endif %}
        {%- endfor %}
;
    }
}
